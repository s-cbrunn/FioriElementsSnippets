sap.ui.define(["sap/ui/webc/common/thirdparty/base/UI5Element","sap/ui/webc/common/thirdparty/base/renderer/LitRenderer","sap/ui/webc/common/thirdparty/base/asset-registries/Icons","sap/ui/webc/common/thirdparty/base/util/createStyleInHead","sap/ui/webc/common/thirdparty/base/i18nBundle","sap/ui/webc/common/thirdparty/base/asset-registries/i18n","sap/ui/webc/common/thirdparty/base/Keys","sap/ui/webc/common/thirdparty/base/isLegacyBrowser","./generated/templates/IconTemplate.lit","./generated/themes/Icon.css"],function(e,t,i,a,n,s,r,c,o,l){"use strict";function u(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var d=u(e);var f=u(t);var h=u(a);var p=u(c);const m="ICON_NOT_FOUND";const b={tag:"ui5-icon",languageAware:true,properties:{interactive:{type:Boolean},name:{type:String},accessibleName:{type:String},showTooltip:{type:Boolean},role:{type:String},ariaHidden:{type:String},pathData:{type:String,noAttribute:true},accData:{type:Object,noAttribute:true},focused:{type:Boolean},invalid:{type:Boolean},effectiveAccessibleName:{type:String,defaultValue:undefined,noAttribute:true}},events:{click:{}}};class g extends d{static get metadata(){return b}static get render(){return f}static get template(){return o}static get styles(){return l}static async onDefine(){this.createGlobalStyle()}_onfocusin(e){if(this.interactive){this.focused=true}}_onfocusout(e){this.focused=false}_onkeydown(e){if(!this.interactive){return}if(r.isEnter(e)){this.fireEvent("click")}if(r.isSpace(e)){e.preventDefault()}}_onkeyup(e){if(this.interactive&&r.isSpace(e)){this.fireEvent("click")}}_onclick(e){if(this.interactive){e.stopPropagation();this.fireEvent("click")}}get _dir(){if(!this.effectiveDir){return}if(this.ltr){return"ltr"}return this.effectiveDir}get effectiveAriaHidden(){if(this.ariaHidden===""){return}return this.ariaHidden}get tabIndex(){return this.interactive?"0":"-1"}get effectiveAccessibleRole(){if(this.role){return this.role}if(this.interactive){return"button"}return this.effectiveAccessibleName?"img":"presentation"}static createGlobalStyle(){if(p()){const e=document.head.querySelector(`style[data-ui5-icon-global]`);if(!e){h(`ui5-icon { display: none !important; }`,{"data-ui5-icon-global":""})}}}static removeGlobalStyle(){if(p()){const e=document.head.querySelector(`style[data-ui5-icon-global]`);if(e){document.head.removeChild(e)}}}async onBeforeRendering(){const e=this.name;if(!e){return console.warn("Icon name property is required",this)}let t=i.getIconDataSync(e);if(!t){t=await i.getIconData(e)}if(t===m){this.invalid=true;return console.warn(`Required icon is not registered. You can either import the icon as a module in order to use it e.g. "@ui5/webcomponents-icons/dist/${e.replace("sap-icon://","")}.js", or setup a JSON build step and import "@ui5/webcomponents-icons/dist/AllIcons.js".`)}if(!t){this.invalid=true;return console.warn(`Required icon is not registered. Invalid icon name: ${this.name}`)}this.invalid=false;this.pathData=t.pathData;this.accData=t.accData;this.ltr=t.ltr;this.packageName=t.packageName;if(this.accessibleName){this.effectiveAccessibleName=this.accessibleName}else if(this.accData){if(!s.getI18nBundleData(this.packageName)){await s.fetchI18nBundle(this.packageName)}const e=n.getI18nBundle(this.packageName);this.effectiveAccessibleName=e.getText(this.accData)||undefined}}get hasIconTooltip(){return this.showTooltip&&this.effectiveAccessibleName}async onEnterDOM(){setTimeout(()=>{this.constructor.removeGlobalStyle()},0)}}g.define();return g});